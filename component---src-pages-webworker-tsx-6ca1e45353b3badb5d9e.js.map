{"version":3,"file":"component---src-pages-webworker-tsx-6ca1e45353b3badb5d9e.js","mappings":"mNAwFA,MA3EA,WA4DE,OACEA,EAAAA,EAAAA,IAAAA,MAAAA,KAAK,OAYT,EC7DA,MAAMC,GAAY,cAAAC,OAAAA,YAAA,EAAAC,KAAAA,SAAAC,OAAAA,mwBAkEZC,GAAK,aAAAH,OAAAA,YAAA,EAAAC,KAAAA,UAAAC,OAAAA,oDAiCX,MA3ByD,SAAU,GAUhE,IATDE,MACEC,MACEC,cAAc,MAAEC,EAAK,YAAEC,EAAW,QAAEC,IAEtCC,MACEC,iBAAiB,gBAAEC,GAAiB,UACpCC,KAGL,EACC,OACEf,EAAAA,EAAAA,IAACgB,EAAAA,EAAQ,CACPF,gBAAiBA,EACjBL,MAAOA,EACPC,YAAaA,EACbO,IAAKN,EACLO,MAAOH,IAEPf,EAAAA,EAAAA,IAACC,EAAY,MACXD,EAAAA,EAAAA,IAACK,EAAK,KAAC,yBACPL,EAAAA,EAAAA,IAACmB,EAAe,OAIxB,C","sources":["webpack://gatsby-starter-default/./src/components/WebWorker/WorkerComponent.tsx","webpack://gatsby-starter-default/./src/pages/webworker.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\ntype QueryMethods = {\n  difference: (args: number[]) => string;\n  multiple: (args: number[]) => string;\n  fibonacci: (args: number[]) => string;\n};\n\ntype EventData = {\n  queryMethodListener: keyof QueryMethods;\n  queryMethodArguments: number[];\n};\n\nfunction WorkerComponent() {\n  // const [result, setResult] = useState('');\n  // const [inputNumObj, setInputNumObj] = useState({\n  //   first: 0,\n  //   second: 0\n  // })\n\n  // const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n  //   const { name, value } = e.target;\n  //   setInputNumObj((prev) => ({\n  //     ...prev,\n  //     [name]: parseInt(value),\n  //   }));\n  // };\n\n  // // 웹 워커 생성\n  // // const worker = new Worker(new URL('./worker.ts', import.meta.url)); \n\n  // const queryMethods: QueryMethods =  {\n  //   difference: (args) => `Difference: ${args[0]}`,\n  //   multiple: (args) => `Multiple: ${args[0]}`,\n  //   fibonacci: (args) => `First Fibonacci: ${args[0]}, Second Fibonacci: ${args[1]}`,\n  // }\n\n  // useEffect(() => {\n  //   // 웹 워커 메시지 수신 이벤트 핸들러\n  //   worker.onmessage = (event) => {\n  //     const { queryMethodListener, queryMethodArguments } = event.data as EventData;\n\n  //     const result = queryMethods[queryMethodListener](queryMethodArguments) || \"Invalid query method\";\n  //     setResult(result);\n  //   };\n\n  //   // 컴포넌트 언마운트 시 웹 워커 제거\n  //   return () => {\n  //     worker.terminate();\n  //   };\n  // }, [worker]);\n\n  // const handleGetDifference = () => {\n  //   worker.postMessage({\n  //     queryMethod: 'getDifference',\n  //     queryMethodArguments: [inputNumObj.first, inputNumObj.second],\n  //   });\n  // };\n\n  // const handleGetMultiple = () => {\n  //   worker.postMessage({\n  //     queryMethod: 'getMultiple',\n  //     queryMethodArguments: [inputNumObj.first, inputNumObj.second],\n  //   });\n  // };\n\n  // const handleGetFibonacci = () => {\n  //   worker.postMessage({\n  //     queryMethod: 'getFibonacci',\n  //     queryMethodArguments: [inputNumObj.first, inputNumObj.second],\n  //   });\n  // };\n\n  return (\n    <div>\n      test\n      {/* <input name=\"first\" type=\"number\" placeholder='first number' onChange={handleChange} /> \n      <input name=\"second\" type=\"number\" placeholder='second number' onChange={handleChange} />\n      <br /> \n      <button onClick={handleGetDifference}>Get Difference</button>\n      <button onClick={handleGetMultiple}>Get Multiple</button>\n      <button onClick={handleGetFibonacci}>Get Fibonacci</button>\n      <br /> \n      <p>{result}</p> */}\n    </div>\n  );\n}\n\nexport default WorkerComponent;","import React, { FunctionComponent } from 'react';\nimport { graphql } from 'gatsby';\nimport Template from 'components/Common/Template';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\nimport styled from '@emotion/styled';\nimport WorkerComponent from 'components/WebWorker/WorkerComponent';\n\ntype AboutPageProps = {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n        description: string;\n        siteUrl: string;\n      };\n    };\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData;\n      };\n      publicURL: string;\n    };\n  };\n};\n\nconst AboutWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  width: 1200px;\n  margin: 60px auto 0;\n\n  @media (max-width: 1600px) {\n    width: 900px;\n    margin: 60px auto 0;\n    padding: 0 20px;\n  }\n\n  @media (max-width: 1200px) {\n    width: 768px;\n    margin: 50px auto 0;\n    padding: 0 20px;\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-top: 50px;\n    padding: 0 20px;\n  }\n\n  & div {\n    padding: 20px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    width: 500px;\n    display: inline-block;\n  }\n\n  & input[type=\"number\"] {\n    width: 130px;\n    padding: 8px;\n    margin: 5px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    font-size: 14px;\n  }\n\n  & button {\n    background-color: #4CAF50;\n    color: white;\n    padding: 10px 15px;\n    margin: 10px 5px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-size: 14px;\n  }\n\n  & button:hover {\n    background-color: #45a049;\n  }\n\n  & p {\n    margin-top: 10px;\n    font-size: 18px;\n    font-weight: bold;\n    padding: 8px;\n    margin: 0 5px;\n  }\n`;\n\nconst Title = styled.h2`\n  display: block;\n  margin-bottom: 45px;\n  font-size: 32px;\n`;\n\nconst WebWorkerPage: FunctionComponent<AboutPageProps> = function ({\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n    file: {\n      childImageSharp: { gatsbyImageData },\n      publicURL,\n    },\n  },\n}) {\n  return (\n    <Template\n      gatsbyImageData={gatsbyImageData}\n      title={title}\n      description={description}\n      url={siteUrl}\n      image={publicURL}\n    >\n      <AboutWrapper>\n        <Title>WebWorker Calculater</Title>\n        <WorkerComponent />\n      </AboutWrapper>\n    </Template>\n  );\n};\n\nexport default WebWorkerPage;\n\nexport const getTemplateList = graphql`\n  query getTemplateList {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 45, height: 45)\n      }\n      publicURL\n    }\n  }\n`;\n"],"names":["___EmotionJSX","AboutWrapper","target","name","styles","Title","data","site","siteMetadata","title","description","siteUrl","file","childImageSharp","gatsbyImageData","publicURL","Template","url","image","WorkerComponent"],"sourceRoot":""}