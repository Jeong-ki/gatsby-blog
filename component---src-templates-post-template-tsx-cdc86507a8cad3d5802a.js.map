{"version":3,"file":"component---src-templates-post-template-tsx-cdc86507a8cad3d5802a.js","mappings":"mNAOA,MAAMA,GAAe,8EAGfC,GAAW,uOAYXC,GAAgB,8hCAuItB,MAVyD,YAAqB,IAAX,KAAEC,GAAM,EACzE,OACEC,EAAAA,EAAAA,IAACJ,EAAe,MACdI,EAAAA,EAAAA,IAACH,EAAW,MACVG,EAAAA,EAAAA,IAACF,EAAgB,CAACG,wBAAyB,CAAEC,OAAQH,MAI7D,ECjJA,MAAMI,GAAmB,4dAsBnBC,GAAiB,ucAoBjBC,GAAK,uLAYLC,GAAe,muBAmCfC,GAAQ,qcAyBRC,GAAI,wKA+BV,MApB2D,YAIvD,IAJiE,MACnEC,EAAK,KACLC,EAAI,WACJC,GACD,EACC,OACEX,EAAAA,EAAAA,IAACG,EAAmB,MAClBH,EAAAA,EAAAA,IAACI,EAAiB,MAChBJ,EAAAA,EAAAA,IAACK,EAAK,KAAEI,IACRT,EAAAA,EAAAA,IAACM,EAAe,KACbK,EAAWC,KAAIC,IACdb,EAAAA,EAAAA,IAACO,EAAQ,CAACO,IAAKD,GAAM,KAAGA,OAG5Bb,EAAAA,EAAAA,IAACQ,EAAI,KAAEE,IAIf,ECrJA,MAAMK,GAAe,2HAoBrB,MAZuD,YAInD,IAJ6D,MAC/DN,EAAK,KACLC,EAAI,WACJC,GACD,EACC,OACEX,EAAAA,EAAAA,IAACe,EAAe,MACdf,EAAAA,EAAAA,IAACgB,EAAY,CAACP,MAAOA,EAAOC,KAAMA,EAAMC,WAAYA,IAG1D,E,oBClBA,MAaMM,GAAiB,+EAiCvB,MA7ByC,WACvC,MAAMC,GAAUC,EAAAA,EAAAA,aACVC,GAAWC,EAAAA,EAAAA,eAwBjB,OAtBAC,EAAAA,EAAAA,YAAU,KACR,GAAwB,OAApBJ,EAAQK,QAAkB,OAE9B,MAAMC,EAAgCC,SAASC,cAAc,UAEvDC,EAAuC,CAC3CC,IA3BM,gCA4BNC,KA3BO,8BA4BP,aAAcT,EAASU,SACvBC,MAAO,UACPC,MAAM,eACNC,YAAa,YACbC,MAAO,QAGTC,OAAOC,QAAQT,GAAYU,SAAQC,IAAmB,IAAjBxB,EAAKyB,GAAM,EAC9Cf,EAAWgB,aAAa1B,EAAKyB,EAAM,IAGrCrB,EAAQK,QAAQkB,YAAYjB,EAAW,GACtC,CAACJ,EAASU,YAEN9B,EAAAA,EAAAA,IAACiB,EAAiB,CAACyB,IAAKxB,GACjC,ECoBA,MArC2D,SAAU,GAQlE,IAPDyB,MACEC,mBAAmB,MAAEC,GACrBC,MACEC,iBAAiB,gBAAEC,KAGvB5B,UAAU,KAAE6B,IACb,EACC,MACEC,MAAM,KACJnD,EACAoD,aAAa,MACX1C,EAAK,QACL2C,EAAO,KACP1C,EAAI,WACJC,EACA0C,WAAW,UAAEC,MAGfT,EAAM,GAEV,OACE7C,EAAAA,EAAAA,IAACuD,EAAAA,EAAQ,CACPP,gBAAiBA,EACjBvC,MAAOA,EACP+C,YAAaJ,EACbK,IAAKR,EACLS,MAAOJ,IAEPtD,EAAAA,EAAAA,IAAC2D,EAAQ,CAAClD,MAAOA,EAAOC,KAAMA,EAAMC,WAAYA,KAChDX,EAAAA,EAAAA,IAAC4D,EAAW,CAAC7D,KAAMA,KACnBC,EAAAA,EAAAA,IAAC6D,EAAa,MAGpB,C","sources":["webpack://gatsby-starter-default/./src/components/Post/PostContent.tsx","webpack://gatsby-starter-default/./src/components/Post/PostHeadInfo.tsx","webpack://gatsby-starter-default/./src/components/Post/PostHead.tsx","webpack://gatsby-starter-default/./src/components/Post/CommentWidget.tsx","webpack://gatsby-starter-default/./src/templates/post_template.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\n\ninterface PostContentProps {\n  html: string;\n}\n\nconst MarkdownWrapper = styled.div`\n  text-align: left;\n`;\nconst PostWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  -webkit-box-align: center;\n  align-items: center;\n  max-width: 900px;\n  padding: 2rem;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst MarkdownRenderer = styled.div`\n  // Renderer Style\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  word-break: break-all;\n  align-items: flex-start;\n  width: 100%;\n  padding: 0 1.5rem;\n  word-break: break-all;\n\n  // Markdown Style\n  line-height: 1.8;\n  font-size: 16px;\n  font-weight: 400;\n\n  // Apply Padding Attribute to All Elements\n  p {\n    padding: 3px 0;\n  }\n\n  // Adjust Heading Element Style\n  h1,\n  h2,\n  h3 {\n    font-weight: 800;\n    margin-bottom: 30px;\n  }\n\n  * + h1,\n  * + h2,\n  * + h3 {\n    margin-top: 80px;\n  }\n\n  hr + h1,\n  hr + h2,\n  hr + h3 {\n    margin-top: 0;\n  }\n\n  h1 {\n    font-size: 30px;\n  }\n\n  h2 {\n    font-size: 25px;\n  }\n\n  h3 {\n    font-size: 20px;\n  }\n\n  // Adjust Quotation Element Style\n  blockquote {\n    margin: 30px 0;\n    padding: 5px 15px;\n    border-left: 2px solid #000000;\n    font-weight: 800;\n  }\n\n  // Adjust List Element Style\n  ol,\n  ul {\n    margin-left: 20px;\n    padding: 30px 0;\n  }\n\n  // Adjust Horizontal Rule style\n  hr {\n    border: 1px solid #000000;\n    margin: 100px 0;\n  }\n\n  // Adjust Link Element Style\n  a {\n    color: #4263eb;\n    text-decoration: underline;\n  }\n\n  // Adjust Code Style\n  pre[class*='language-'] {\n    margin: 30px 0;\n    padding: 15px;\n    font-size: 15px;\n\n    ::-webkit-scrollbar-thumb {\n      background: rgba(255, 255, 255, 0.5);\n      border-radius: 3px;\n    }\n  }\n\n  code[class*='language-'],\n  pre[class*='language-'] {\n    tab-size: 2;\n  }\n  // Markdown Responsive Design\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 20px 20px 40px;\n    line-height: 1.6;\n    font-size: 14px;\n\n    h1 {\n      font-size: 23px;\n    }\n\n    h2 {\n      font-size: 20px;\n    }\n\n    h3 {\n      font-size: 17px;\n    }\n\n    img {\n      width: 100%;\n    }\n\n    hr {\n      margin: 50px 0;\n    }\n  }\n`;\n\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\n  return (\n    <MarkdownWrapper>\n      <PostWrapper>\n        <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />\n      </PostWrapper>\n    </MarkdownWrapper>\n  );\n};\n\nexport default PostContent;\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\n\nexport type PostHeadInfoProps = {\n  title: string;\n  date: string;\n  categories: string[];\n};\n\nconst PostHeadInfoWrapper = styled.div`\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-flex-direction: column;\n  -ms-flex-direction: column;\n  flex-direction: column;\n  -webkit-box-pack: start;\n  -ms-flex-pack: start;\n  -webkit-justify-content: flex-start;\n  justify-content: flex-start;\n  -webkit-align-items: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  max-width: 900px;\n  padding: 2rem;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst PostHeadInfoInner = styled.div`\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-flex-direction: column;\n  -ms-flex-direction: column;\n  flex-direction: column;\n  -webkit-box-pack: start;\n  -ms-flex-pack: start;\n  -webkit-justify-content: flex-start;\n  justify-content: flex-start;\n  -webkit-align-items: flex-start;\n  -webkit-box-align: flex-start;\n  -ms-flex-align: flex-start;\n  align-items: flex-start;\n  width: 100%;\n  padding: 0 1.5rem;\n`;\n\nconst Title = styled.h2`\n  text-align: left;\n  color: inherit;\n  font-size: 2.5rem;\n  line-height: 1.5;\n  font-weight: 700;\n\n  @media (max-width: 768px) {\n    font-size: 30px;\n  }\n`;\n\nconst CategoryWrapper = styled.div`\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-flex-direction: column;\n  -ms-flex-direction: column;\n  flex-direction: column;\n  position: relative;\n  min-width: 1px;\n  max-width: 100%;\n  -webkit-box-pack: start;\n  -ms-flex-pack: start;\n  -webkit-justify-content: flex-start;\n  justify-content: flex-start;\n  -webkit-align-items: stretch;\n  -webkit-box-align: stretch;\n  -ms-flex-align: stretch;\n  align-items: stretch;\n  -webkit-flex-basis: auto;\n  -ms-flex-preferred-size: auto;\n  flex-basis: auto;\n  box-sizing: border-box;\n  -webkit-flex: 1;\n  -ms-flex: 1;\n  flex: 1;\n  -webkit-box-flex-wrap: wrap;\n  -webkit-flex-wrap: wrap;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  -webkit-flex-direction: row;\n  -ms-flex-direction: row;\n  flex-direction: row;\n`;\n\nconst Category = styled.span`\n  display: inline-block;\n  vertical-align: middle;\n  border-radius: 16px;\n  font-weight: 500;\n  line-height: 1;\n  cursor: inherit;\n  font-feature-settings: tnum;\n  font-variant: tabular-nums;\n  text-transform: capitalize;\n  white-space: nowrap;\n  background: #000;\n  color: #ffffff;\n  border: 1px solid #000;\n  padding: 4px 10px;\n  font-size: 1rem;\n  margin-right: 5px;\n  margin: 15px 5px 15px 0;\n\n  @media (max-width: 768px) {\n    font-size: 0.8rem;\n    padding: 3px 8px;\n  }\n`;\n\nconst Date = styled.span`\n  color: inherit;\n  font-size: 0.875rem;\n  line-height: 1.5;\n  color: #666;\n\n  @media (max-width: 768px) {\n    font-size: 0.8rem;\n  }\n`;\n\nconst PostHeadInfo: FunctionComponent<PostHeadInfoProps> = function ({\n  title,\n  date,\n  categories,\n}) {\n  return (\n    <PostHeadInfoWrapper>\n      <PostHeadInfoInner>\n        <Title>{title}</Title>\n        <CategoryWrapper>\n          {categories.map(item => (\n            <Category key={item}># {item}</Category>\n          ))}\n        </CategoryWrapper>\n        <Date>{date}</Date>\n      </PostHeadInfoInner>\n    </PostHeadInfoWrapper>\n  );\n};\n\nexport default PostHeadInfo;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport PostHeadInfo, { PostHeadInfoProps } from 'components/Post/PostHeadInfo';\n\nconst PostHeadWrapper = styled.header`\n  text-align: center;\n\n  @media (max-width: 768px) {\n    height: 300px;\n  }\n`;\n\nconst PostHead: FunctionComponent<PostHeadInfoProps> = function ({\n  title,\n  date,\n  categories,\n}) {\n  return (\n    <PostHeadWrapper>\n      <PostHeadInfo title={title} date={date} categories={categories} />\n    </PostHeadWrapper>\n  );\n};\n\nexport default PostHead;\n","import styled from '@emotion/styled';\nimport React, { createRef, FunctionComponent, useEffect } from 'react';\nimport { useLocation } from '@gatsbyjs/reach-router';\n\nconst src = 'https://utteranc.es/client.js';\nconst repo = 'Jeong-Ki/Jeong-Ki.github.io';\n\ntype UtterancesAttributesType = {\n  src: string;\n  repo: string;\n  'issue-term': string;\n  label: string;\n  theme: string;\n  crossorigin: string;\n  async: string;\n};\n\nconst UtterancesWrapper = styled.div`\n  padding: 0 3.5rem;\n`;\n\nconst CommentWidget: FunctionComponent = function () {\n  const element = createRef<HTMLDivElement>();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (element.current === null) return;\n\n    const utterances: HTMLScriptElement = document.createElement('script');\n\n    const attributes: UtterancesAttributesType = {\n      src,\n      repo,\n      'issue-term': location.pathname,\n      label: 'Comment',\n      theme: `github-light`,\n      crossorigin: 'anonymous',\n      async: 'true',\n    };\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    element.current.appendChild(utterances);\n  }, [location.pathname]);\n\n  return <UtterancesWrapper ref={element} />;\n};\n\nexport default CommentWidget;\n","import React, { FunctionComponent } from 'react';\nimport { graphql } from 'gatsby';\nimport Template from 'components/Common/Template';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\nimport PostContent from 'components/Post/PostContent';\nimport PostHead from 'components/Post/PostHead';\nimport { PostFrontmatterType } from 'types/PostItem.types';\nimport CommentWidget from 'components/Post/CommentWidget';\n\ntype PostTemplateProps = {\n  data: {\n    allMarkdownRemark: {\n      edges: PostPageItemType[]; // 존재하지 않는 타입이므로 에러가 발생하지만 일단 작성해주세요\n    };\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData;\n      };\n    };\n  };\n  location: {\n    href: string;\n  };\n};\nexport type PostPageItemType = {\n  node: {\n    html: string;\n    frontmatter: PostFrontmatterType;\n  };\n};\n\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\n  data: {\n    allMarkdownRemark: { edges },\n    file: {\n      childImageSharp: { gatsbyImageData },\n    },\n  },\n  location: { href },\n}) {\n  const {\n    node: {\n      html,\n      frontmatter: {\n        title,\n        summary,\n        date,\n        categories,\n        thumbnail: { publicURL },\n      },\n    },\n  } = edges[0];\n\n  return (\n    <Template\n      gatsbyImageData={gatsbyImageData}\n      title={title}\n      description={summary}\n      url={href}\n      image={publicURL}\n    >\n      <PostHead title={title} date={date} categories={categories} />\n      <PostContent html={html} />\n      <CommentWidget />\n    </Template>\n  );\n};\n\nexport default PostTemplate;\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY년 MM월 DD일\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData\n              }\n              publicURL\n            }\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 45, height: 45)\n      }\n    }\n  }\n`;\n"],"names":["MarkdownWrapper","PostWrapper","MarkdownRenderer","html","___EmotionJSX","dangerouslySetInnerHTML","__html","PostHeadInfoWrapper","PostHeadInfoInner","Title","CategoryWrapper","Category","Date","title","date","categories","map","item","key","PostHeadWrapper","PostHeadInfo","UtterancesWrapper","element","createRef","location","useLocation","useEffect","current","utterances","document","createElement","attributes","src","repo","pathname","label","theme","crossorigin","async","Object","entries","forEach","_ref","value","setAttribute","appendChild","ref","data","allMarkdownRemark","edges","file","childImageSharp","gatsbyImageData","href","node","frontmatter","summary","thumbnail","publicURL","Template","description","url","image","PostHead","PostContent","CommentWidget"],"sourceRoot":""}